Imports System.Data
Imports System.Text
Imports System.IO
Imports EMAB = Itis.ApplicationBlocks.ExceptionManagement.UnTrappedExceptionManager
Imports MyMethod = System.Reflection.MethodBase
Partial Class m_user
    Inherits System.Web.UI.Page

   Public BC AS NEW MUserBC
    ''' <summary>
    ''' PAGE LOAD
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load


        Me.lblMsg.Text = ""
        If Not IsPostBack Then

            '屌掕崁栚愝掕
            KoteiInit()

            '柧嵶崁栚愝掕
            MsInit()
        End If

    End Sub
    ''' <summary>
    ''' 屌掕崁栚愝掕
    ''' </summary>
    public Sub KoteiInit()
      'EMAB忈奞懳墳忣曬偺奿擺張棟
       EMAB.AddMethodEntrance(Request.ApplicationPath & "." & MyClass.GetType.BaseType.FullName & "." & _
       MyMethod.GetCurrentMethod.Name)
       Me.tbxUserCd.Attributes.Item("itType") = "nvarchar"
       Me.tbxUserCd.Attributes.Item("itLength") = "10"
       Me.tbxUserCd.Attributes.Item("itName") = "用户CD"
       Me.tbxLineId.Attributes.Item("itType") = "nvarchar"
       Me.tbxLineId.Attributes.Item("itLength") = "10"
       Me.tbxLineId.Attributes.Item("itName") = "生产线"
       Me.tbxUserName.Attributes.Item("itType") = "nvarchar"
       Me.tbxUserName.Attributes.Item("itLength") = "10"
       Me.tbxUserName.Attributes.Item("itName") = "用户名"

    End Sub

    ''' <summary>
    ''' 柧嵶崁栚愝掕
    ''' </summary>
    public Sub MsInit()
      'EMAB忈奞懳墳忣曬偺奿擺張棟
       EMAB.AddMethodEntrance(Request.ApplicationPath & "." & MyClass.GetType.BaseType.FullName & "." & _
       MyMethod.GetCurrentMethod.Name)
            '柧嵶愝掕
            Dim dt As DataTable = GetMsData()
            Me.gvMs.DataSource = dt
            Me.gvMs.DataBind()

    End Sub

    ''' <summary>
    ''' 専嶕
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Protected Sub btnSelect_Click(sender As Object, e As System.EventArgs) Handles btnSelect.Click

        MsInit()
    End Sub

    ''' <summary>
    ''' 柧嵶僨乕僞庢摼
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function GetMsData() As Data.DataTable

      'EMAB忈奞懳墳忣曬偺奿擺張棟
       EMAB.AddMethodEntrance(Request.ApplicationPath & "." & MyClass.GetType.BaseType.FullName & "." & _
       MyMethod.GetCurrentMethod.Name)
       Return BC.SelMUser(tbxUserCd_key.Text)
    End Function

    ''' <summary>
    ''' 僨乕僞懚嵼僠僃僢僋
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function IsHaveData() As Boolean

      'EMAB忈奞懳墳忣曬偺奿擺張棟
       EMAB.AddMethodEntrance(Request.ApplicationPath & "." & MyClass.GetType.BaseType.FullName & "." & _
       MyMethod.GetCurrentMethod.Name)
       Return BC.SelMUser(tbxUserCd.Text).Rows.Count > 0
    End Function

    ''' <summary>
    ''' 峏怴
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Protected Sub btnUpdate_Click(sender As Object, e As System.EventArgs) Handles btnUpdate.Click


            Try
       BC.UpdMUser(hiduserCd.Text,tbxuserCd.Text, tbxlineId.Text, tbxuserName.Text)
        MsInit()
            Catch ex As Exception
                Common.ShowMsg(Me.Page, ex.Message)
                Exit Sub
            End Try
Me.hidOldRowIdx.Text = ""
    End Sub
    ''' <summary>
    ''' 搊榐
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Protected Sub btnInsert_Click(sender As Object, e As System.EventArgs) Handles btnInsert.Click

        '僨乕僞懚嵼僠僃僢僋
            If IsHaveData() Then
                Common.ShowMsg(Me.Page, "僨乕僞懚嵼偟傑偟偨丅")
                Exit Sub
            End If
            Try
            BC.InsMUser(tbxuserCd.Text, tbxlineId.Text, tbxuserName.Text)
                MsInit()
            Catch ex As Exception
                Common.ShowMsg(Me.Page, ex.Message)
                Exit Sub
            End Try
Me.hidOldRowIdx.Text = ""
    End Sub

    ''' <summary>
    ''' 嶍彍
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Protected Sub btnDelete_Click(sender As Object, e As System.EventArgs) Handles btnDelete.Click


            Try
       BC.DelMUser(hiduserCd.Text)
        MsInit()
            Catch ex As Exception
                Common.ShowMsg(Me.Page, ex.Message)
                Exit Sub
            End Try
Me.hidOldRowIdx.Text = ""
    End Sub

End Class
